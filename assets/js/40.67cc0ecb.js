(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{473:function(t,e,o){"use strict";o.r(e);var s=o(45),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"retrofit"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#retrofit"}},[t._v("#")]),t._v(" Retrofit")]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("Lessons ðŸ“š")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://saurabhjadhavblogs.com/retrofit-with-mvvm-in-jetpack-compose",target:"_blank",rel:"noopener noreferrer"}},[t._v("Retrofit with MVVM"),o("OutboundLink")],1)]),t._v(" "),o("p",[t._v("This time, we think that an article will be more interesting for you than codelabs.")]),t._v(" "),o("p",[t._v("Indeed, codelabs don't use complex architecture, so you would need to do several codelabs and then try to link things together, which can be very difficult.")]),t._v(" "),o("p",[t._v("So we propose this article, which presents something close to what we use. The author puts everything in the app module but you will need to split things between modules.")]),t._v(" "),o("p",[t._v("It's quite strange than the author provides all his "),o("code",[t._v("build.gradle")]),t._v(" at the beginning of his article. You only need to import the needed dependencies. Try to use the last version available.")])]),t._v(" "),o("p",[t._v("Try to use what the article presents to get data with Retrofit from the API you chose and display them in your views instead of your fake data.")])])}),[],!1,null,null,null);e.default=a.exports}}]);